import akka.actor.ActorSystem
import akka.http.scaladsl.Http
import akka.http.scaladsl.server.Directives._
import akka.stream.ActorMaterializer
import com.typesafe.config.{Config, ConfigFactory}
import slick.jdbc.MySQLProfile.api._

import scala.concurrent.ExecutionContextExecutor

object Appointify extends App {

  implicit val system: ActorSystem = ActorSystem("appointify-system")
  implicit val materializer: ActorMaterializer = ActorMaterializer()
  implicit val executionContext: ExecutionContextExecutor = system.dispatcher

  val config: Config = ConfigFactory.load()
  val dbUrl: String = config.getString("appointify.database.url")
  val dbUser: String = config.getString("appointify.database.user")
  val dbPassword: String = config.getString("appointify.database.password")
  val dbDriver: String = config.getString("appointify.database.driver")

  val db = Database.forURL(dbUrl, dbUser, dbPassword, driver = dbDriver)

  val routes = path("hello") {
    get {
      complete("Hello, world!")
    }
  }

  val bindingFuture = Http().bindAndHandle(routes, "localhost", 8080)

  println(s"Server online at http://localhost:8080/")
}
